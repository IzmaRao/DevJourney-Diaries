import { NextRequest, NextResponse } from 'next/server';

const blogs = [
    {id: 1, author: "Izma Ikhlaque" , blogname: "The Journey to Becoming a Full-Stack Developer", description1: "When I embarked on my journey to becoming a full-stack developer, I started with the basics: HTML, CSS, and JavaScript. These foundational technologies were relatively easy to grasp, and I quickly became proficient in them. Moving on to advanced frameworks like Next.jsand Tailwind CSS, I applied my knowledge through project-based learning, creating websites and assignments to solidify my understanding.",  description2: "Throughout this journey, I realized the immense value of self-study and the importance of having mentors for guidance. Tackling errors and bugs required a resilient mindset. Persistence and consistent effort eventually led to breakthroughs, improving my technical skills and problem-solving abilities.", description3: "Collaboration with other developers became a significant part of my growth. Working on team projects taught me effective communication, version control with Git, and code review. Staying updated with industry trends and continuously learning new technologies helped me build a well-rounded portfolio, reflecting my journey from a novice to a full-stack developer.", image: "/image.png"},
    {id: 2, author: "Arham Ikhlaque" , blogname: "Exploring New JavaScript Frameworks", description1: "Staying updated with the latest tools is vital for web developers. Recently, I delved into Next.jsand Tailwind CSS. Next.js, built on React, simplifies the development of server-rendered applications. It offers automatic code splitting, server-side rendering, and static site generation, which significantly enhance performance and SEO.",  description2: "Tailwind CSS, on the other hand, adopts a utility-first approach for styling. It provides a set of predefined classes that make styling more efficient and consistent. This framework eliminates the need for writing custom CSS for every component, speeding up the development process. Combining these tools has transformed my workflow. Next.jsmanages complex configurations, allowing me to focus on building features, while Tailwind CSS makes the styling process more intuitive and faster.", description3: "In the ever-evolving landscape of web development, frameworks like Next.jsand Tailwind CSS are invaluable. They not only enhance productivity but also empower developers to build scalable, high-performance applications efficiently. This exploration has been transformative, and I highly recommend these frameworks for modern web development.", image: "/img2.jpg"},
    {id: 3, author: "Arish Ikhlaque" , blogname: "Debugging Tips for Developers", description1: "Debugging is a critical skill for developers. Understanding your codebase thoroughly is crucial before diving into debugging. Familiarizing yourself with the architecture and key components can help identify potential issues more efficiently.",  description2: "Using the right tools can streamline the process. Development environments come equipped with powerful debugging tools like breakpoints and step-by-step execution. Chrome DevTools and Visual Studio Codeâ€™s debugger are particularly useful. Implementing logging allows tracking execution flow and monitoring variables.", description3: "Maintaining a resilient mindset is vital. Debugging can be frustrating, but persistence and patience usually lead to breakthroughs. Collaborating with peers or seeking community help can provide new perspectives and solutions. By combining these strategies, developers can enhance their problem-solving skills and streamline the debugging process.", image: "/img3.jpeg"},
];

export async function GET(request:NextRequest, context: { params: Promise<{id: string}> }) {
    const { id } = await context.params;
    const blogId = parseInt(id, 10);
    const blog = blogs.find((p) => p.id === blogId)
    return NextResponse.json(blog);
}

